// Mocks generated by Mockito 5.4.4 from annotations
// in we_shop/test/features/home_products/domain/usecases/get_main_products_use_case.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:we_shop/features/home_products/domain/entities/Product.dart'
    as _i4;
import 'package:we_shop/features/home_products/domain/repos/products_repository.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [ProductsRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockProductsRepository extends _i1.Mock
    implements _i2.ProductsRepository {
  MockProductsRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.Product>> getMainProducts() => (super.noSuchMethod(
        Invocation.method(
          #getMainProducts,
          [],
        ),
        returnValue: _i3.Future<List<_i4.Product>>.value(<_i4.Product>[]),
      ) as _i3.Future<List<_i4.Product>>);

  @override
  _i3.Future<List<_i4.Product>> getMostUsedProducts(int? offset) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMostUsedProducts,
          [offset],
        ),
        returnValue: _i3.Future<List<_i4.Product>>.value(<_i4.Product>[]),
      ) as _i3.Future<List<_i4.Product>>);

  @override
  _i3.Future<List<_i4.Product>> getRecommendedProducts() => (super.noSuchMethod(
        Invocation.method(
          #getRecommendedProducts,
          [],
        ),
        returnValue: _i3.Future<List<_i4.Product>>.value(<_i4.Product>[]),
      ) as _i3.Future<List<_i4.Product>>);
}
